# Generated by Django 5.1.3 on 2025-10-02 16:14

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Calle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=4)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CashBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_date', models.DateTimeField(auto_now_add=True)),
                ('closing_date', models.DateTimeField(blank=True, null=True)),
                ('opening_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('closing_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('open', 'Abierta'), ('closed', 'Cerrada')], default='open', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CashConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('type', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='CashMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('cash', 'Efectivo'), ('yape', 'Yape'), ('plin', 'Plin'), ('card', 'Tarjeta')], max_length=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(blank=True, max_length=2, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('min_consumption', models.IntegerField(blank=True, null=True)),
                ('max_consumption', models.IntegerField(blank=True, null=True)),
                ('extra_rate', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('price_water', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio de agua')),
                ('price_sewer', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio de alcantarillado')),
                ('has_meter', models.BooleanField(default=True)),
                ('state', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre de la empresa')),
                ('ruc', models.CharField(max_length=11, unique=True, verbose_name='RUC')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Dirección')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo electrónico')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Logo')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(blank=True, max_length=5, null=True)),
                ('identity_document_type', models.IntegerField(default=1)),
                ('full_name', models.CharField(max_length=200)),
                ('number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('has_meter', models.BooleanField(default=True)),
                ('mz', models.CharField(blank=True, max_length=15, null=True)),
                ('lote', models.CharField(blank=True, max_length=15, null=True)),
                ('nro', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DailyCashReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('opening_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_incomes', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_outcomes', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('closing_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('confirmed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Debt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-period'],
            },
        ),
        migrations.CreateModel(
            name='DebtDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(editable=False, max_length=7, unique=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Activa'), ('cancelled', 'Anulada')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceDebt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='InvoicePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('cash', 'Efectivo'), ('yape', 'Yape'), ('plin', 'Plin'), ('card', 'Tarjeta')], max_length=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Pago de factura',
                'verbose_name_plural': 'Pagos de factura',
            },
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField()),
                ('date_of_issue', models.DateField(null=True)),
                ('date_of_due', models.DateField(null=True)),
                ('date_of_cute', models.DateField(null=True)),
                ('current_reading', models.DecimalField(decimal_places=2, max_digits=10)),
                ('previous_reading', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('consumption', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_water', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_sewer', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_fixed_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('paid', models.BooleanField(default=False)),
                ('has_meter', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-period'],
            },
        ),
        migrations.CreateModel(
            name='ReadingGeneration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date_of_issue', models.DateField()),
                ('date_of_due', models.DateField()),
                ('date_of_cute', models.DateField()),
                ('total_generated', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-period'],
            },
        ),
        migrations.CreateModel(
            name='Via',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='WaterMeter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('installation_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Zona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=4)),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la Zona')),
            ],
            options={
                'verbose_name': 'Zona',
                'verbose_name_plural': 'Zonas',
            },
        ),
    ]
